# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

stages:
- stage: Build
  jobs:
  - job: Build
    pool:
      vmImage: 'ubuntu-latest'
    steps:
    - task: Cache@2
      inputs:
        key: 'npm | "$(Agent.OS)" | package-lock.json'
        restoreKeys: |
          npm | "$(Agent.OS)"
        path: $(Build.SourcesDirectory)/node_modules
      displayName: 'Cache npm'    
    - task: Npm@1
      displayName: npm install
      inputs:
        command: 'install'
    - task: Npm@1
      displayName: npm build
      inputs:
        command: 'custom'
        customCommand: 'run build'
    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: 'build'
        ArtifactName: 'drop'
        publishLocation: 'Container'
    
# - stage: Deploy
#   jobs:
#   - job: Deploy
#     pool:
#       vmImage: 'ubuntu-latest'
#     steps:
#     - task: DownloadBuildArtifacts@1
#       inputs:
#         buildType: 'current'
#         downloadType: 'single'
#         artifactName: 'drop'
#         downloadPath: '$(System.ArtifactsDirectory)'
#     - task: AzureRmWebAppDeployment@5
#       displayName: Deploy webapp-dev
#       inputs:
#         ConnectionType: 'AzureRM'
#         azureSubscription: 'ME-MngEnvMCAP843502-v-shipradhan-1 (c5ade1be-3e22-415a-adf2-b3ec2fc417ec)'
#         appType: 'webAppLinux'
#         WebAppName: 'webapp-project'
#         packageForLinux: '$(System.ArtifactsDirectory)/drop'
#         RuntimeStack: 'NODE|22-lts'
#         DeploymentTypeLinux: 'oneDeploy'

        
    
